Baixar
docker pull nextcloud

Rodar
docker run -d -p 80:80 nextcloud

Instalar (SQLite)
Acesse localhost:80
Escolha um usuário e senha para a conta de administrador
Selecione o banco de dados, no nosso caso deixaremos o SQLite, com a pasta padrão /var/www/html/data.
Deixe selecionado para instalar os aplicativos recomendados (Calendar, Contacts, Talk, Mail e Collaborative Editing)
Clique no botão concluir

Configurar Domínios Confiáveis (para funcionar na internet)
Edite a configuração "trusted_domains" em /config/config.php
Exemplo pode ser encontrado em config.sample.php

Verifique o id do container (o meu começa com 58)
docker ps -a

Acesse a linha de comando
docker exec -it cd bash

acesse a pasta config
cd config

Liste o conteúdo
ls -la

faça uma cópia do arquivo config.php
cp config.php config.bck.php

Veja se realmente criou
ls -la

note que o dono é o root, pode trocar se quiser (não afetará em nada o resultado)
Note que o dono é www-root, então daremos o arquivo para ele
chown www-root config.bck.php

Abra outra tela de terminal com Ctrl+Shift+T
Como o container não tem editor de texto, copiaremos o arquivo para fora, editaremos, depois devolveremos.
copie a pasta do container para o seu diretório atual
pode usar os dois primeiros dígitos
docker cp 58:/var/www/html/config/config.php config.php

verifique se realmente copiou
ls -la

Abra-os para edição, destrave o terminal com &
gedit config.php &

Faça as alterações conforme a seguir, não substitua tudo, apenas complete com sua necessidade.
No meu caso adicionei o site "seuSite.com"

'trusted_domains' =>
array(
    0 => 'localhost',
    1 => 'seuSite.com'
)

Salve com Ctrl+S

Cole novamente dentro do container (não se esqueça que cd é o id do container) .
docker cp config.php 58:/var/www/html/config/config.php

Mude o dono imediatamente (se mexer no site dará erro)
chown www-root config.php

Reinicie o container...
docker restart 58

Veja se refletiu
ls -la

Não funcionou ainda.
________________________________________________
FAZENDO O BAKUP DOS DADOS (SQLite)
docker stop 59 1e
cd ~
mkdir nc20
cd nc20
docker cp 59:/var/www/html ./

Compactar o arquivo
tar -czvf html20jun20.tar.gz html

RECUPERAR OS DADOS
cd nc20

Deve ter arquivos compactados
ls

Descompactar o arquivo
Estando no diretório onde a pasta esteja
tar -vzxf html html20jun20.tar.gz

Substitua a pasta html no destino (o sistema não perguntará, fará direto)
docker cp ./ 1e:/var/www/

Abra outra tela de terminal
docker exec -it 1e bash
cd /var/www/
mudar o dono de tudo
chown -R www-data html


________________________________________________
_______________________________________________________________________________

https://hub.docker.com/_/nextcloud
A safe home for all your data. Access & share your files, calendars, contacts, mail & more from any device, on your terms.

Using an external database
By default this container uses SQLite for data storage, but the Nextcloud setup wizard (appears on first run) allows connecting to an existing MySQL/MariaDB or PostgreSQL database. You can also link a database container, e. g. --link my-mysql:mysql, and then use mysql as the database host on setup. More info is in the docker-compose section.

Persistent data
The Nextcloud installation and all data beyond what lives in the database (file uploads, etc) is stored in the unnamed docker volume volume /var/www/html. The docker daemon will store that data within the docker directory /var/lib/docker/volumes/.... That means your data is saved even if the container crashes, is stopped or deleted.

A named Docker volume or a mounted host directory should be used for upgrades and backups. To achieve this you need one volume for your database container and one for Nextcloud.
/var/www/html/ folder where all Nextcloud data lives

$ docker run -d \
-v nextcloud:/var/www/html \
nextcloud

Database:

/var/lib/mysql MySQL / MariaDB Data

/var/lib/postgresql/data PostgreSQL Data

$ docker run -d \
-v db:/var/lib/mysql \
mariadb

If you want to get fine grained access to your individual files, you can mount additional volumes for data, config, your theme and custom apps. The data, config are stored in respective subfolders inside /var/www/html/. The apps are split into core apps (which are shipped with Nextcloud and you don't need to take care of) and a custom_apps folder. If you use a custom theme it would go into the themes subfolder.

Overview of the folders that can be mounted as volumes:

/var/www/html Main folder, needed for updating
/var/www/html/custom_apps installed / modified apps
/var/www/html/config local configuration
/var/www/html/data the actual data of your Nextcloud
/var/www/html/themes/<YOU_CUSTOM_THEME> theming/branding
If you want to use named volumes for all of these it would look like this

$ docker run -d \
    -v nextcloud:/var/www/html \
    -v apps:/var/www/html/custom_apps \
    -v config:/var/www/html/config \
    -v data:/var/www/html/data \
    -v theme:/var/www/html/themes/<YOUR_CUSTOM_THEME> \
    nextcloud
