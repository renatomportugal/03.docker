Baixar
docker pull nextcloud

Rodar
docker run -d -p 8080:80 nextcloud

Instalar (SQLite)
Acesse localhost:8080
Escolha um usuário e senha para a conta de administrador
Selecione o banco de dados, no nosso caso deixaremos o SQLite, com a pasta padrão /var/www/html/data.
Deixe selecionado para instalar os aplicativos recomendados (Calendar, Contacts, Talk, Mail e Collaborative Editing)
Clique no botão concluir

Configurar Domínios Confiáveis (para funcionar na internet)
Edite a configuração "trusted_domains" em /config/config.php
Exemplo pode ser encontrado em config.sample.php

Verifique o id do container
docker ps -a

Inicie, caso esteja parado.
docker start cd

Acesse a linha de comando
docker exec -it cd bash

A pasta padrão da aplicação é /var/www/html
Liste o conteúdo
ls -la

acesse a pasta config
cd config

Como o container não tem editor de texto, copiaremos o arquivo para fora, editaremos, depois devolveremos.

Saia do bash do container
exit

identifique o id do container
docker ps
docker ps -a
docker cp 

copie a pasta do container para o seu diretório atual
pode usar os dois primeiros dígitos
docker cp cd:/var/www/html/config/config.php config.php

verifique se realmente copiou
ls

copie o arquivo de exemplo também
docker cp cd:/var/www/html/config/config.sample.php config.sample.php

Abra-os para edição, destrave o terminal com &
gedit config.sample.php &
gedit config.php &

Faça as alterações conforme a seguir, não substitua tudo, apenas complete com sua necessidade.
No meu caso adicionei o site "seuSite.com"

'trusted_domains' =>
array(
    0 => 'localhost',
    1 => 'seuSite.com'
)

Cole novamente dentro do container (não se esqueça que cd é o id do container) .
docker cp config.php cd:/var/www/html/config/config.php

Reinicie o container...
docker stop cd
docker start cd

Está dando outro erro...
Can't write into config directory!

Teremos de dar direito de escrita para o servidor.
docker exec -it cd bash

deve estar na pasta /var/www/html/
ls -la

mude o dono do config.php
chown www-data config.php

Veja se refletiu
ls -la

_______________________________________________________________________________

https://hub.docker.com/_/nextcloud
A safe home for all your data. Access & share your files, calendars, contacts, mail & more from any device, on your terms.

Using an external database
By default this container uses SQLite for data storage, but the Nextcloud setup wizard (appears on first run) allows connecting to an existing MySQL/MariaDB or PostgreSQL database. You can also link a database container, e. g. --link my-mysql:mysql, and then use mysql as the database host on setup. More info is in the docker-compose section.

Persistent data
The Nextcloud installation and all data beyond what lives in the database (file uploads, etc) is stored in the unnamed docker volume volume /var/www/html. The docker daemon will store that data within the docker directory /var/lib/docker/volumes/.... That means your data is saved even if the container crashes, is stopped or deleted.

A named Docker volume or a mounted host directory should be used for upgrades and backups. To achieve this you need one volume for your database container and one for Nextcloud.
/var/www/html/ folder where all Nextcloud data lives

$ docker run -d \
-v nextcloud:/var/www/html \
nextcloud

Database:

/var/lib/mysql MySQL / MariaDB Data

/var/lib/postgresql/data PostgreSQL Data

$ docker run -d \
-v db:/var/lib/mysql \
mariadb

If you want to get fine grained access to your individual files, you can mount additional volumes for data, config, your theme and custom apps. The data, config are stored in respective subfolders inside /var/www/html/. The apps are split into core apps (which are shipped with Nextcloud and you don't need to take care of) and a custom_apps folder. If you use a custom theme it would go into the themes subfolder.

Overview of the folders that can be mounted as volumes:

/var/www/html Main folder, needed for updating
/var/www/html/custom_apps installed / modified apps
/var/www/html/config local configuration
/var/www/html/data the actual data of your Nextcloud
/var/www/html/themes/<YOU_CUSTOM_THEME> theming/branding
If you want to use named volumes for all of these it would look like this

$ docker run -d \
    -v nextcloud:/var/www/html \
    -v apps:/var/www/html/custom_apps \
    -v config:/var/www/html/config \
    -v data:/var/www/html/data \
    -v theme:/var/www/html/themes/<YOUR_CUSTOM_THEME> \
    nextcloud
