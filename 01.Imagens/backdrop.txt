https://hub.docker.com/_/backdrop

docker pull backdrop

docker run \
  -d \
  -p 80:80 \
  -e BACKDROP_DB_HOST=mysql.5.7.wp \
  -e BACKDROP_DB_PORT=3306 \
  -e BACKDROP_DB_USER=root \
  -e BACKDROP_DB_PASSWORD=my-password \
  -e BACKDROP_DB_NAME=backdrop \
  --name backdrop \
  --network mysql \
  backdrop

e82

Deu erro

docker run --name some-backdrop --link some-mysql:mysql -d backdrop

The following environment variables are also honored for configuring your Backdrop CMS instance:

-e BACKDROP_DB_HOST=... (defaults to the IP and port of the linked mysql container)
-e BACKDROP_DB_USER=... (defaults to "root")
-e BACKDROP_DB_PASSWORD=... (defaults to the value of the MYSQL_ROOT_PASSWORD environment variable from the linked mysql container)
-e BACKDROP_DB_NAME=... (defaults to "backdrop")
-e BACKDROP_DB_PORT=... (defaults to 3306)
-e BACKDROP_DB_DRIVER=... (defaults to "mysql")
The BACKDROP_DB_NAME must already exist on the given MySQL server. Check out the official mysql image for more info on spinning up a DB.

If you'd like to be able to access the instance from the host without the container's IP, standard port mappings can be used:

$ docker run --name some-backdrop --link some-mysql:mysql -p 8080:80 -d backdrop
Then, access it via http://localhost:8080 or http://host-ip:8080 in a browser.

If you'd like to use an external database instead of a linked mysql container, specify the hostname and port with BACKDROP_DB_HOST/BACKDROP_DB_PORT along with the password in BACKDROP_DB_PASSWORD and the username in BACKDROP_DB_USER (if it is something other than root):

docker run --name some-backdrop \
  -e BACKDROP_DB_HOST=10.1.2.3 \
  -e BACKDROP_DB_PORT=10432 \
  -e BACKDROP_DB_USER=... \
  -e BACKDROP_DB_PASSWORD=... \
  -d backdrop
